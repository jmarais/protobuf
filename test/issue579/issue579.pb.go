// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: issue579.proto

package issue579

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ServiceEntry_Location int32

const (
	ServiceEntry_MESH_EXTERNAL ServiceEntry_Location = 0
	ServiceEntry_MESH_INTERNAL ServiceEntry_Location = 1
)

var ServiceEntry_Location_name = map[int32]string{
	0: "MESH_EXTERNAL",
	1: "MESH_INTERNAL",
}

var ServiceEntry_Location_value = map[string]int32{
	"MESH_EXTERNAL": 0,
	"MESH_INTERNAL": 1,
}

func (x ServiceEntry_Location) String() string {
	return proto.EnumName(ServiceEntry_Location_name, int32(x))
}

func (ServiceEntry_Location) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_36f424db0bb88c38, []int{0, 0}
}

type ServiceEntry_Resolution int32

const (
	ServiceEntry_NONE   ServiceEntry_Resolution = 0
	ServiceEntry_STATIC ServiceEntry_Resolution = 1
	ServiceEntry_DNS    ServiceEntry_Resolution = 2
)

var ServiceEntry_Resolution_name = map[int32]string{
	0: "NONE",
	1: "STATIC",
	2: "DNS",
}

var ServiceEntry_Resolution_value = map[string]int32{
	"NONE":   0,
	"STATIC": 1,
	"DNS":    2,
}

func (x ServiceEntry_Resolution) String() string {
	return proto.EnumName(ServiceEntry_Resolution_name, int32(x))
}

func (ServiceEntry_Resolution) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_36f424db0bb88c38, []int{0, 1}
}

type ServiceEntry struct {
	Hosts                []string                 `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Addresses            []string                 `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Ports                []*Port                  `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	Location             ServiceEntry_Location    `protobuf:"varint,4,opt,name=location,proto3,enum=issue579.ServiceEntry_Location" json:"location,omitempty"`
	Resolution           ServiceEntry_Resolution  `protobuf:"varint,5,opt,name=resolution,proto3,enum=issue579.ServiceEntry_Resolution" json:"resolution,omitempty"`
	Endpoints            []*ServiceEntry_Endpoint `protobuf:"bytes,6,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	ExportTo             []string                 `protobuf:"bytes,7,rep,name=export_to,json=exportTo,proto3" json:"export_to,omitempty"`
	SubjectAltNames      []string                 `protobuf:"bytes,8,rep,name=subject_alt_names,json=subjectAltNames,proto3" json:"subject_alt_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ServiceEntry) Reset()         { *m = ServiceEntry{} }
func (m *ServiceEntry) String() string { return proto.CompactTextString(m) }
func (*ServiceEntry) ProtoMessage()    {}
func (*ServiceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_36f424db0bb88c38, []int{0}
}
func (m *ServiceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceEntry.Unmarshal(m, b)
}
func (m *ServiceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceEntry.Marshal(b, m, deterministic)
}
func (m *ServiceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceEntry.Merge(m, src)
}
func (m *ServiceEntry) XXX_Size() int {
	return xxx_messageInfo_ServiceEntry.Size(m)
}
func (m *ServiceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceEntry proto.InternalMessageInfo

func (m *ServiceEntry) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *ServiceEntry) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ServiceEntry) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ServiceEntry) GetLocation() ServiceEntry_Location {
	if m != nil {
		return m.Location
	}
	return ServiceEntry_MESH_EXTERNAL
}

func (m *ServiceEntry) GetResolution() ServiceEntry_Resolution {
	if m != nil {
		return m.Resolution
	}
	return ServiceEntry_NONE
}

func (m *ServiceEntry) GetEndpoints() []*ServiceEntry_Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *ServiceEntry) GetExportTo() []string {
	if m != nil {
		return m.ExportTo
	}
	return nil
}

func (m *ServiceEntry) GetSubjectAltNames() []string {
	if m != nil {
		return m.SubjectAltNames
	}
	return nil
}

type ServiceEntry_Endpoint struct {
	Address              string            `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Ports                map[string]uint32 `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Network              string            `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	Locality             string            `protobuf:"bytes,5,opt,name=locality,proto3" json:"locality,omitempty"`
	Weight               uint32            `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ServiceEntry_Endpoint) Reset()         { *m = ServiceEntry_Endpoint{} }
func (m *ServiceEntry_Endpoint) String() string { return proto.CompactTextString(m) }
func (*ServiceEntry_Endpoint) ProtoMessage()    {}
func (*ServiceEntry_Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_36f424db0bb88c38, []int{0, 0}
}
func (m *ServiceEntry_Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceEntry_Endpoint.Unmarshal(m, b)
}
func (m *ServiceEntry_Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceEntry_Endpoint.Marshal(b, m, deterministic)
}
func (m *ServiceEntry_Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceEntry_Endpoint.Merge(m, src)
}
func (m *ServiceEntry_Endpoint) XXX_Size() int {
	return xxx_messageInfo_ServiceEntry_Endpoint.Size(m)
}
func (m *ServiceEntry_Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceEntry_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceEntry_Endpoint proto.InternalMessageInfo

func (m *ServiceEntry_Endpoint) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ServiceEntry_Endpoint) GetPorts() map[string]uint32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ServiceEntry_Endpoint) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ServiceEntry_Endpoint) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *ServiceEntry_Endpoint) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *ServiceEntry_Endpoint) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type Port struct {
	Number               uint32   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Protocol             string   `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_36f424db0bb88c38, []int{1}
}
func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Port) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("issue579.ServiceEntry_Location", ServiceEntry_Location_name, ServiceEntry_Location_value)
	proto.RegisterEnum("issue579.ServiceEntry_Resolution", ServiceEntry_Resolution_name, ServiceEntry_Resolution_value)
	proto.RegisterType((*ServiceEntry)(nil), "issue579.ServiceEntry")
	proto.RegisterType((*ServiceEntry_Endpoint)(nil), "issue579.ServiceEntry.Endpoint")
	proto.RegisterMapType((map[string]string)(nil), "issue579.ServiceEntry.Endpoint.LabelsEntry")
	proto.RegisterMapType((map[string]uint32)(nil), "issue579.ServiceEntry.Endpoint.PortsEntry")
	proto.RegisterType((*Port)(nil), "issue579.Port")
}

func init() { proto.RegisterFile("issue579.proto", fileDescriptor_36f424db0bb88c38) }

var fileDescriptor_36f424db0bb88c38 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0xdd, 0x24, 0x6d, 0x9a, 0xdc, 0xb5, 0x35, 0x7b, 0x11, 0x19, 0xaa, 0x60, 0x2c, 0x3e, 0x84,
	0x5d, 0x28, 0xb2, 0x22, 0xee, 0x2a, 0x82, 0x65, 0x0d, 0xb8, 0x50, 0xa3, 0x4c, 0xfb, 0xe0, 0x5b,
	0x49, 0xdb, 0xc1, 0x8d, 0x9b, 0xcd, 0x94, 0xcc, 0x64, 0xd7, 0xfe, 0x3b, 0x7f, 0x91, 0xbf, 0x61,
	0xc9, 0x64, 0x92, 0xf4, 0xa5, 0xf4, 0x6d, 0xce, 0xb9, 0xf7, 0xcc, 0x9c, 0xfb, 0x31, 0x30, 0x48,
	0x84, 0x28, 0xd8, 0xfb, 0x0f, 0x97, 0xe3, 0x4d, 0xce, 0x25, 0x47, 0xa7, 0xc6, 0xa3, 0x7f, 0x36,
	0x3c, 0x99, 0xb1, 0xfc, 0x3e, 0x59, 0xb1, 0x30, 0x93, 0xf9, 0x16, 0x9f, 0x41, 0xf7, 0x86, 0x0b,
	0x29, 0x88, 0xe1, 0x5b, 0x81, 0x4b, 0x2b, 0x80, 0x2f, 0xc1, 0x8d, 0xd7, 0xeb, 0x9c, 0x09, 0xc1,
	0x04, 0x31, 0x55, 0xa4, 0x25, 0xf0, 0x0d, 0x74, 0x37, 0x3c, 0x97, 0x82, 0x58, 0xbe, 0x15, 0x1c,
	0x9f, 0x0f, 0xc6, 0xcd, 0x73, 0x3f, 0x79, 0x2e, 0x69, 0x15, 0xc4, 0x4f, 0xe0, 0xa4, 0x7c, 0x15,
	0xcb, 0x84, 0x67, 0xa4, 0xe3, 0x1b, 0xc1, 0xe0, 0xfc, 0x55, 0x9b, 0xb8, 0xeb, 0x61, 0x3c, 0xd5,
	0x69, 0xb4, 0x11, 0xe0, 0x04, 0x20, 0x67, 0x82, 0xa7, 0x85, 0x92, 0x77, 0x95, 0xfc, 0xf5, 0x1e,
	0x39, 0x6d, 0x12, 0xe9, 0x8e, 0x08, 0x3f, 0x83, 0xcb, 0xb2, 0xf5, 0x86, 0x27, 0x99, 0x14, 0xc4,
	0x56, 0x4e, 0xf7, 0x19, 0x08, 0x75, 0x1e, 0x6d, 0x15, 0xf8, 0x02, 0x5c, 0xf6, 0xb7, 0xac, 0x64,
	0x21, 0x39, 0xe9, 0xa9, 0x16, 0x38, 0x15, 0x31, 0xe7, 0x78, 0x0a, 0x27, 0xa2, 0x58, 0xfe, 0x61,
	0x2b, 0xb9, 0x88, 0x53, 0xb9, 0xc8, 0xe2, 0x3b, 0x26, 0x88, 0xa3, 0x92, 0x9e, 0xea, 0xc0, 0x24,
	0x95, 0x51, 0x49, 0x0f, 0xff, 0x9b, 0xe0, 0xd4, 0x0f, 0x20, 0x81, 0x9e, 0xee, 0x23, 0x31, 0x7c,
	0x23, 0x70, 0x69, 0x0d, 0xf1, 0x4b, 0xdd, 0x54, 0x53, 0x59, 0x3d, 0x3d, 0x60, 0x55, 0xb5, 0x5a,
	0x28, 0xae, 0x6e, 0xf8, 0x15, 0xd8, 0x69, 0xbc, 0x64, 0x69, 0x3d, 0x97, 0xb3, 0x43, 0x57, 0x4c,
	0x55, 0x76, 0x75, 0x87, 0x96, 0x96, 0x06, 0x33, 0x26, 0x1f, 0x78, 0x7e, 0xab, 0x86, 0xe6, 0xd2,
	0x1a, 0xe2, 0xb0, 0x9a, 0x67, 0x9a, 0xc8, 0xad, 0x1a, 0x88, 0x4b, 0x1b, 0x8c, 0xcf, 0xc1, 0x7e,
	0x60, 0xc9, 0xef, 0x1b, 0x49, 0x6c, 0xdf, 0x08, 0xfa, 0x54, 0xa3, 0xe1, 0x05, 0x40, 0xeb, 0x13,
	0x3d, 0xb0, 0x6e, 0xd9, 0x56, 0x17, 0x5e, 0x1e, 0xcb, 0xed, 0xbb, 0x8f, 0xd3, 0x82, 0x11, 0x53,
	0xc9, 0x2a, 0xf0, 0xd1, 0xbc, 0x30, 0x86, 0x97, 0x70, 0xbc, 0x63, 0xef, 0x90, 0xd4, 0xdd, 0x91,
	0x8e, 0xde, 0x82, 0x53, 0x6f, 0x14, 0x9e, 0x40, 0xff, 0x7b, 0x38, 0xfb, 0xb6, 0x08, 0x7f, 0xcd,
	0x43, 0x1a, 0x4d, 0xa6, 0xde, 0x51, 0x43, 0x5d, 0x47, 0x9a, 0x32, 0x46, 0x67, 0x00, 0xed, 0x12,
	0xa1, 0x03, 0x9d, 0xe8, 0x47, 0x14, 0x7a, 0x47, 0x08, 0x60, 0xcf, 0xe6, 0x93, 0xf9, 0xf5, 0x95,
	0x67, 0x60, 0x0f, 0xac, 0xaf, 0xd1, 0xcc, 0x33, 0x47, 0x11, 0x74, 0xca, 0x9a, 0xca, 0x9a, 0xb3,
	0xe2, 0x6e, 0xc9, 0x72, 0xe5, 0xaa, 0x4f, 0x35, 0x2a, 0xfb, 0xa4, 0x7e, 0xdd, 0x8a, 0xa7, 0xda,
	0x5b, 0x83, 0x11, 0xa1, 0x53, 0xee, 0x0a, 0xb1, 0x14, 0xaf, 0xce, 0x4b, 0x5b, 0x45, 0xdf, 0x3d,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x94, 0x91, 0xcc, 0xe0, 0xb5, 0x03, 0x00, 0x00,
}
